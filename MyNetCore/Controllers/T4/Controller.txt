<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="$(SolutionDir)\Model\bin\Debug\netstandard2.0\Model.dll" #>
<#@ import namespace="Model" #>
<#@ import namespace="Model.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.IO"#>
<#@ import namespace="System"#>
<#@ import namespace="System.Configuration"#>   
<#@ output extension=".cs" #>
<#@include file="$(SolutionDir)\T4\MultipleOutputHelper.ttinclude"#> 

<# 
	var assembly = System.Reflection.Assembly.GetAssembly(typeof(Entity));
	var types = assembly.GetTypes().Where(x => typeof(Entity).IsAssignableFrom(x) && !x.IsAbstract && !x.IsInterface);

	var manager = Manager.Create(Host, GenerationEnvironment);  
		foreach (var type in types)
		{
		   
			// 定义输出文件
			manager.StartNewFile(type.Name+"Controller.cs");
#>
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Model;
using Service;

// For more information on enabling Web API for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860

namespace MyNetCore.Controllers
{

    public partial class  <#=type.Name#>Controller : BaseController
    {
        private readonly  <#=type.Name#>Service  <#=type.Name.ToLower()#>;
        public <#=type.Name#>Controller( <#=type.Name#>Service _<#=type.Name.ToLower()#>)
        {
            <#=type.Name.ToLower()#> = _<#=type.Name.ToLower()#>;
        }

        [HttpPost]
        public Result Add([FromBody]<#=type.Name#> model)
        {
            return <#=type.Name.ToLower()#>.AddEntity(model);
        }

        [HttpPost]
        public Result Update([FromBody]<#=type.Name#> model)
        {
            return <#=type.Name.ToLower()#>.UpdateEntity(model);
        }

        [HttpPost("{id}")]
        public Result Delete(string id)
        {
            return <#=type.Name.ToLower()#>.DeleteEntity(id);
        }
    }
}




<# 
    // 结束输出文件
    manager.EndBlock();
 } 
    // 执行编译
    manager.Process(true);  
 #> 