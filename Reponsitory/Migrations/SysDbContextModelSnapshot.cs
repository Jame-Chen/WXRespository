// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Reponsitory;

namespace Reponsitory.Migrations
{
    [DbContext(typeof(SysDbContext))]
    partial class SysDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Model.Article_ReadHistory", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<string>("article_id");

                    b.Property<DateTime>("gmt_create");

                    b.Property<DateTime>("gmt_modified");

                    b.Property<int>("is_delete");

                    b.Property<string>("user_id");

                    b.HasKey("Id");

                    b.ToTable("Article_ReadHistory");
                });

            modelBuilder.Entity("Model.Article_Record", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<string>("article_cdnurl_auto")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<string>("article_cdnurl_self")
                        .HasMaxLength(500);

                    b.Property<string>("article_title_auto")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<string>("article_title_self")
                        .HasMaxLength(40);

                    b.Property<string>("article_url")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<string>("article_userid")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("gmt_create");

                    b.Property<DateTime>("gmt_modified");

                    b.Property<int>("is_delete");

                    b.HasKey("Id");

                    b.ToTable("Article_Record");
                });

            modelBuilder.Entity("Model.Article_Status", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<string>("article_id")
                        .HasMaxLength(50);

                    b.Property<int>("article_read_max");

                    b.Property<int>("article_read_number");

                    b.Property<int>("article_status");

                    b.Property<DateTime>("gmt_create");

                    b.Property<DateTime>("gmt_modified");

                    b.Property<int>("is_delete");

                    b.HasKey("Id");

                    b.HasIndex("article_id");

                    b.ToTable("Article_Status");
                });

            modelBuilder.Entity("Model.Fatiecard_Detail", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<int>("fatiecard_acquire_spend");

                    b.Property<int>("fatiecard_channel");

                    b.Property<int>("fatiecard_num");

                    b.Property<DateTime>("gmt_create");

                    b.Property<DateTime>("gmt_modified");

                    b.Property<int>("is_delete");

                    b.Property<string>("user_id")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("user_id");

                    b.ToTable("Fatiecard_Detail");
                });

            modelBuilder.Entity("Model.User_Info", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<int>("fatiecard_nm");

                    b.Property<DateTime>("gmt_create");

                    b.Property<DateTime>("gmt_modified");

                    b.Property<string>("invite_code")
                        .HasMaxLength(200);

                    b.Property<int>("is_delete");

                    b.Property<string>("profile_pic")
                        .HasMaxLength(500);

                    b.Property<string>("user_nickname")
                        .HasMaxLength(100);

                    b.Property<string>("user_phone")
                        .HasMaxLength(11);

                    b.Property<string>("wechat_code")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("User_Info");
                });

            modelBuilder.Entity("Model.Article_Status", b =>
                {
                    b.HasOne("Model.Article_Record", "Article_Record")
                        .WithMany()
                        .HasForeignKey("article_id");
                });

            modelBuilder.Entity("Model.Fatiecard_Detail", b =>
                {
                    b.HasOne("Model.User_Info", "User_Info")
                        .WithMany()
                        .HasForeignKey("user_id");
                });
#pragma warning restore 612, 618
        }
    }
}
